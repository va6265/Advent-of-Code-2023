//#include <ext/pb_ds/assoc_container.hpp>
#include <iostream>
#include <fstream>
#include <sstream>
#include <algorithm>
#include <climits>
#include <cmath>
#include <string>
#include <vector>
#include <deque>
#include <set>
#include <map>
#include <unordered_map>
#include <queue>
#include <numeric>
#include <stack>
#include <iomanip>

using namespace std;
//using namespace __gnu_pbds;

typedef long long int ll;

#define mod 1000000007
ll gcd(ll a,ll b){
    if(b==0)
        return a;
    return gcd(b,a%b);
}
ll __lcm(ll a,ll b){
    return a*b/gcd(a,b);
}
int power(ll a, ll b) {
    ll r = 1;
    while(b) {
        if (b & 1)
            r = (r * a) % mod;
        a = (a * a) % mod;
        b >>= 1;
    }
    return r;
}
int inv_mod(ll a) {
    return power(a, mod-2);
}

ll calc(ll n){
    return n*(n+1)/2;
}

ll f(ll n){
    return n*(n+1)/2;
}

void solve() {
    vector<string> win,have;
    string line;
    ifstream myfile("/Users/vaibhavagarwal/CLionProjects/codeforces/input.txt");
    if (myfile.is_open())
    {
        while ( getline (myfile,line,':' ) ){
            getline (myfile,line,'|' );
            win.push_back(line);
            getline(myfile,line);
            have.push_back(line);
        }myfile.close();
    }
    else cout << "Unable to open file";
    cin.clear();

    int n  = win.size(),ans=0;
    for(int i=0;i<n;i++){
        int val =0;
        set<int> s;
        stringstream ss1(win[i]), ss2(have[i]);
        int num;
        while (ss1>>num) {
            s.insert(num);
        }
        while(ss2>>num){
            if(s.count(num)){
                if(val==0) val++;
                else val*=2;
            }
        }
        ans+=val;
    }
    cout<<ans<<'\n';
}

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    int test_cases;
//    cin >> test_cases;
    test_cases = 1;
    while (test_cases--) {
        solve();
    }
}

/*
 *
 */